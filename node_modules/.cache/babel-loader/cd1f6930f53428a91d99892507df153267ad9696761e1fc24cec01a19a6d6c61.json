{"ast":null,"code":"import React,{useState}from'react';import'./style.css';import dark from'../images/bg-desktop-dark.jpg';import sun from'../images/icon-sun.svg';import cross from'../images/icon-cross.svg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// State hooks to manage input text, todo items, and filter\nconst[inputText,setInputText]=useState('');const[items,setItems]=useState([]);const[filter,setFilter]=useState('All');// Function to handle filter selection\nfunction handleFilter(filter){setFilter(filter);}// Function to handle input change\nfunction handleChange(event){setInputText(event.target.value);}// Function to add a new todo item\nfunction addItem(){// Check if input is not empty\nif(inputText.trim()!==''){// Add the new todo item to the list\nsetItems(prevItems=>[...prevItems,{text:inputText,completed:false}]);// Clear the input field\nsetInputText('');}}// Function to toggle completion status of a todo item\nfunction toggleComplete(index){// Create a copy of the items array\nconst updatedItems=[...items];// Toggle the completion status of the selected item\nupdatedItems[index].completed=!updatedItems[index].completed;// Update the state with the modified items array\nsetItems(updatedItems);}// Function to delete a todo item\nfunction deleteItem(index){// Filter out the item to be deleted\nconst updatedItems=items.filter((_,i)=>i!==index);// Update the state with the modified items array\nsetItems(updatedItems);}// Function to clear completed todo items\nfunction clearCompleted(){// Filter out the completed items\nconst remainingItems=items.filter(item=>!item.completed);// Update the state with the remaining items\nsetItems(remainingItems);}// Filter the items based on the selected filter\nconst filteredItems=items.filter(todoItem=>{if(filter==='All'){return true;}else if(filter==='Active'){return!todoItem.completed;}else if(filter==='Completed'){return todoItem.completed;}return false;});return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg\",children:/*#__PURE__*/_jsx(\"img\",{src:dark,alt:\"dark background\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"black\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex todo\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"TODO\"}),/*#__PURE__*/_jsx(\"img\",{src:sun,alt:\"sun icon\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex inp\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Create a new todo...\",value:inputText,onChange:handleChange})}),/*#__PURE__*/_jsx(\"button\",{onClick:addItem,children:\"ADD\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ctn\",children:[filteredItems.map((todoItem,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex ctn1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex2\",children:[/*#__PURE__*/_jsx(\"div\",{className:todoItem.completed?'selected':'circle',onClick:()=>toggleComplete(index)}),/*#__PURE__*/_jsx(\"span\",{style:{textDecoration:todoItem.completed?'line-through':'none'},children:todoItem.text})]}),/*#__PURE__*/_jsx(\"img\",{src:cross,onClick:()=>deleteItem(index),alt:\"delete\"})]},index)),/*#__PURE__*/_jsxs(\"div\",{className:\"flex last\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:items.filter(item=>!item.completed).length}),\" items left\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex2\",children:[/*#__PURE__*/_jsx(\"p\",{onClick:()=>handleFilter('All'),children:\"All\"}),/*#__PURE__*/_jsx(\"p\",{onClick:()=>handleFilter('Active'),children:\"Active\"}),/*#__PURE__*/_jsx(\"p\",{onClick:()=>handleFilter('Completed'),children:\"Completed\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{onClick:clearCompleted,children:\"Clear Completed\"})})]})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","dark","sun","cross","jsx","_jsx","jsxs","_jsxs","App","inputText","setInputText","items","setItems","filter","setFilter","handleFilter","handleChange","event","target","value","addItem","trim","prevItems","text","completed","toggleComplete","index","updatedItems","deleteItem","_","i","clearCompleted","remainingItems","item","filteredItems","todoItem","className","children","src","alt","type","placeholder","onChange","onClick","map","style","textDecoration","length"],"sources":["C:/Users/USER/Documents/todo-app-main/todo-app/src/Components/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './style.css';\nimport dark from '../images/bg-desktop-dark.jpg';\nimport sun from '../images/icon-sun.svg';\nimport cross from '../images/icon-cross.svg';\n \nfunction App() {\n  // State hooks to manage input text, todo items, and filter\n  const [inputText, setInputText] = useState('');\n  const [items, setItems] = useState([]);\n  const [filter, setFilter] = useState('All');\n \n  // Function to handle filter selection\n  function handleFilter(filter) {\n    setFilter(filter);\n  }\n \n  // Function to handle input change\n  function handleChange(event) {\n    setInputText(event.target.value);\n  }\n \n  // Function to add a new todo item\n  function addItem() {\n    // Check if input is not empty\n    if (inputText.trim() !== '') {\n      // Add the new todo item to the list\n      setItems(prevItems => [...prevItems, { text: inputText, completed: false }]);\n      // Clear the input field\n      setInputText('');\n    }\n  }\n \n  // Function to toggle completion status of a todo item\n  function toggleComplete(index) {\n    // Create a copy of the items array\n    const updatedItems = [...items];\n    // Toggle the completion status of the selected item\n    updatedItems[index].completed = !updatedItems[index].completed;\n    // Update the state with the modified items array\n    setItems(updatedItems);\n  }\n \n  // Function to delete a todo item\n  function deleteItem(index) {\n    // Filter out the item to be deleted\n    const updatedItems = items.filter((_, i) => i !== index);\n    // Update the state with the modified items array\n    setItems(updatedItems);\n  }\n \n   // Function to clear completed todo items\n   function clearCompleted() {\n    // Filter out the completed items\n    const remainingItems = items.filter(item => !item.completed);\n    // Update the state with the remaining items\n    setItems(remainingItems);\n  }\n\n  // Filter the items based on the selected filter\n  const filteredItems = items.filter(todoItem => {\n    if (filter === 'All') {\n      return true;\n    } else if (filter === 'Active') {\n      return !todoItem.completed;\n    } else if (filter === 'Completed') {\n      return todoItem.completed;\n    }\n    return false;\n  });\n \n  return (\n    <div className=\"App\">\n      <div className='bg'><img src={dark} alt=\"dark background\" /></div>\n      <div className='black'></div>\n      <div className='box'>\n        <div className='flex todo'><h1>TODO</h1><img src={sun} alt=\"sun icon\" /></div>\n        <div className='flex inp'>\n          <div><input type=\"text\" placeholder='Create a new todo...' value={inputText} onChange={handleChange} /></div>\n          <button onClick={addItem}>ADD</button>\n        </div>\n        <div className='ctn'>\n          {filteredItems.map((todoItem, index) => (\n            <div className='flex ctn1' key={index}>\n              <div className='flex2'>\n                {/* Clicking on the circle toggles completion status */}\n                <div className={todoItem.completed ? 'selected' : 'circle'} onClick={() => toggleComplete(index)}></div>\n                <span style={{ textDecoration: todoItem.completed ? 'line-through' : 'none' }}>\n                  {todoItem.text}\n                </span>\n              </div>\n              {/* Clicking on the delete icon deletes the item */}\n              <img src={cross} onClick={() => deleteItem(index)} alt=\"delete\" />\n            </div>\n          ))}\n          <div className='flex last'>\n            {/* Display the number of active items */}\n            <div><p><span>{items.filter(item => !item.completed).length}</span> items left</p></div>\n            <div className='flex2'>\n              {/* Filter buttons */}\n              <p onClick={() => handleFilter('All')}>All</p>\n              <p onClick={() => handleFilter('Active')}>Active</p>\n              <p onClick={() => handleFilter('Completed')}>Completed</p>\n            </div>\n            <div><p onClick={clearCompleted}>Clear Completed</p></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n \nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}