{"ast":null,"code":"import React,{useState}from'react';import'../style.css';import dark from'../images/bg-desktop-dark.jpg';import sun from'../images/icon-sun.svg';import cross from'../images/icon-cross.svg';import mobiledark from'../images/bg-mobile-dark.jpg';import light from'../images/bg-desktop-light.jpg';import mobilelight from'../images/bg-mobile-light.jpg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// State hooks to manage input text, todo items, and filter\nconst[inputText,setInputText]=useState('');const[items,setItems]=useState([]);const[filter,setFilter]=useState('All');const[lightMode,setLightMode]=useState(false);const handleLightModeChange=()=>{setLightMode(!lightMode);};// Function to handle filter selection\nfunction handleFilter(filter){setFilter(filter);}// Function to handle input change\nfunction handleChange(event){setInputText(event.target.value);}// Function to add a new todo item\nfunction addItem(){// Check if input is not empty\nif(inputText.trim()!==''){// Add the new todo item to the list\nsetItems(prevItems=>[...prevItems,{text:inputText,completed:false}]);// Clear the input field\nsetInputText('');}}// Function to toggle completion status of a todo item\nfunction toggleComplete(index){// Create a copy of the items array\nconst updatedItems=[...items];// Toggle the completion status of the selected item\nupdatedItems[index].completed=!updatedItems[index].completed;// Update the state with the modified items array\nsetItems(updatedItems);}// Function to delete a todo item\nfunction deleteItem(index){// Filter out the item to be deleted\nconst updatedItems=items.filter((_,i)=>i!==index);// Update the state with the modified items array\nsetItems(updatedItems);}// Function to clear completed todo items\nfunction clearCompleted(){// Filter out the completed items\nconst remainingItems=items.filter(item=>!item.completed);// Update the state with the remaining items\nsetItems(remainingItems);}// Filter the items based on the selected filter\nconst filteredItems=items.filter(todoItem=>{if(filter==='All'){return true;}else if(filter==='Active'){return!todoItem.completed;}else if(filter==='Completed'){return todoItem.completed;}return false;});const mobile=window.matchMedia('(max-width: 475px)');// const darkModeMobile = mobile ? url(${mobiledark}) : url(${dark});\n// const lightModelMobile = mobile ? url(${mobilelight}) : url(${light});\nlet darkModeMobile;let lightModelMobile;if(mobile===true){darkModeMobile=\"url(\".concat(mobiledark,\")\");lightModelMobile=\"url(\".concat(mobilelight,\")\");}else{darkModeMobile=\"url(\".concat(dark,\")\");lightModelMobile=\"url(\".concat(light,\")\");}return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',height:'100vh',width:'100%',overflowX:'hidden'},children:[/*#__PURE__*/_jsx(\"div\",{style:{backgroundImage:lightMode?lightModelMobile:darkModeMobile,backgroundRepeat:'no-repeat',flex:1},className:\"bg\"}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:lightMode?'hsl(236, 33%, 92%)':'hsl(235, 21%, 11%)',flex:1,padding:'40px'},className:\"dark\"}),' ',/*#__PURE__*/_jsxs(\"div\",{className:\"box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex todo\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"TODO\"}),/*#__PURE__*/_jsx(\"img\",{src:sun,alt:\"sun icon\",onClick:handleLightModeChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex inp\",style:{backgroundColor:lightMode?'#f0f4f6':'#25273c'},children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Create a new todo...\",value:inputText,onChange:handleChange,style:{backgroundColor:lightMode?'#f0f4f6':'#25273c',color:lightMode?'hsl(235, 19%, 35%)':'hsl(0, 0%, 98%)'}})}),/*#__PURE__*/_jsx(\"button\",{onClick:addItem,children:\"ADD\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ctn\",style:{backgroundColor:lightMode?'#f0f4f6':'#25273c'},children:[filteredItems.map((todoItem,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex ctn1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex2\",children:[/*#__PURE__*/_jsx(\"div\",{className:todoItem.completed?'selected':'circle',onClick:()=>toggleComplete(index)}),/*#__PURE__*/_jsx(\"span\",{style:{textDecoration:todoItem.completed?'line-through':'none',color:lightMode?'hsl(235, 19%, 35%)':'hsl(0, 0%, 98%)'},children:todoItem.text})]}),/*#__PURE__*/_jsx(\"img\",{src:cross,onClick:()=>deleteItem(index),alt:\"delete\"})]},index)),/*#__PURE__*/_jsxs(\"div\",{className:\"flex last\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:items.filter(item=>!item.completed).length}),' ',\"items left\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex2\",children:[/*#__PURE__*/_jsx(\"p\",{onClick:()=>handleFilter('All'),style:{color:filter==='All'?'hsl(220, 98%, 61%)':'inherit'},className:filter!=='All'?'hovers':'',children:\"All\"}),/*#__PURE__*/_jsx(\"p\",{onClick:()=>handleFilter('Active'),style:{color:filter==='Active'?'hsl(220, 98%, 61%)':'inherit'},className:filter!=='Active'?'hovers':'',children:\"Active\"}),/*#__PURE__*/_jsx(\"p\",{onClick:()=>handleFilter('Completed'),style:{color:filter==='Completed'?'hsl(220, 98%, 61%)':'inherit'},className:filter!=='Completed'?'hovers':'',children:\"Completed\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{onClick:clearCompleted,className:lightMode?'no-hover':'hovers',children:\"Clear Completed\"})})]})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","dark","sun","cross","mobiledark","light","mobilelight","jsx","_jsx","jsxs","_jsxs","App","inputText","setInputText","items","setItems","filter","setFilter","lightMode","setLightMode","handleLightModeChange","handleFilter","handleChange","event","target","value","addItem","trim","prevItems","text","completed","toggleComplete","index","updatedItems","deleteItem","_","i","clearCompleted","remainingItems","item","filteredItems","todoItem","mobile","window","matchMedia","darkModeMobile","lightModelMobile","concat","style","display","flexDirection","height","width","overflowX","children","backgroundImage","backgroundRepeat","flex","className","backgroundColor","padding","src","alt","onClick","type","placeholder","onChange","color","map","textDecoration","length"],"sources":["C:/Users/USER/Documents/todo-app-main/todo-app/src/Components/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../style.css';\r\nimport dark from '../images/bg-desktop-dark.jpg';\r\nimport sun from '../images/icon-sun.svg';\r\nimport cross from '../images/icon-cross.svg';\r\nimport mobiledark from '../images/bg-mobile-dark.jpg';\r\nimport light from '../images/bg-desktop-light.jpg';\r\nimport mobilelight from '../images/bg-mobile-light.jpg';\r\n\r\nfunction App() {\r\n  // State hooks to manage input text, todo items, and filter\r\n  const [inputText, setInputText] = useState('');\r\n  const [items, setItems] = useState([]);\r\n  const [filter, setFilter] = useState('All');\r\n\r\n  const [lightMode, setLightMode] = useState(false);\r\n\r\n  const handleLightModeChange = () => {\r\n    setLightMode(!lightMode);\r\n  };\r\n  // Function to handle filter selection\r\n  function handleFilter(filter) {\r\n    setFilter(filter);\r\n  }\r\n\r\n  // Function to handle input change\r\n  function handleChange(event) {\r\n    setInputText(event.target.value);\r\n  }\r\n\r\n  // Function to add a new todo item\r\n  function addItem() {\r\n    // Check if input is not empty\r\n    if (inputText.trim() !== '') {\r\n      // Add the new todo item to the list\r\n      setItems((prevItems) => [\r\n        ...prevItems,\r\n        { text: inputText, completed: false },\r\n      ]);\r\n      // Clear the input field\r\n      setInputText('');\r\n    }\r\n  }\r\n\r\n  // Function to toggle completion status of a todo item\r\n  function toggleComplete(index) {\r\n    // Create a copy of the items array\r\n    const updatedItems = [...items];\r\n    // Toggle the completion status of the selected item\r\n    updatedItems[index].completed = !updatedItems[index].completed;\r\n    // Update the state with the modified items array\r\n    setItems(updatedItems);\r\n  }\r\n\r\n  // Function to delete a todo item\r\n  function deleteItem(index) {\r\n    // Filter out the item to be deleted\r\n    const updatedItems = items.filter((_, i) => i !== index);\r\n    // Update the state with the modified items array\r\n    setItems(updatedItems);\r\n  }\r\n\r\n  // Function to clear completed todo items\r\n  function clearCompleted() {\r\n    // Filter out the completed items\r\n    const remainingItems = items.filter((item) => !item.completed);\r\n    // Update the state with the remaining items\r\n    setItems(remainingItems);\r\n  }\r\n\r\n  // Filter the items based on the selected filter\r\n  const filteredItems = items.filter((todoItem) => {\r\n    if (filter === 'All') {\r\n      return true;\r\n    } else if (filter === 'Active') {\r\n      return !todoItem.completed;\r\n    } else if (filter === 'Completed') {\r\n      return todoItem.completed;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  const mobile = window.matchMedia('(max-width: 475px)');\r\n\r\n  // const darkModeMobile = mobile ? url(${mobiledark}) : url(${dark});\r\n\r\n  // const lightModelMobile = mobile ? url(${mobilelight}) : url(${light});\r\n\r\n  let darkModeMobile;\r\n  let lightModelMobile;\r\n\r\n  if (mobile === true) {\r\n    darkModeMobile = `url(${mobiledark})`;\r\n    lightModelMobile = `url(${mobilelight})`;\r\n  } else {\r\n    darkModeMobile = `url(${dark})`;\r\n    lightModelMobile = `url(${light})`;\r\n  }\r\n \r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100vh',\r\n        width: '100%',\r\n        overflowX: 'hidden',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          backgroundImage: lightMode ? lightModelMobile : darkModeMobile,\r\n          backgroundRepeat: 'no-repeat',\r\n          flex: 1,\r\n        }}className='bg'\r\n      ></div>\r\n      <div\r\n        style={{\r\n          backgroundColor: lightMode ? 'hsl(236, 33%, 92%)' : 'hsl(235, 21%, 11%)',\r\n          flex: 1,\r\n          padding: '40px'\r\n        }} className='dark'\r\n      ></div>{' '}\r\n      <div className=\"box\">\r\n        <div className=\"flex todo\">\r\n          <h1>TODO</h1>\r\n          <img src={sun} alt=\"sun icon\" onClick={handleLightModeChange} />\r\n        </div>\r\n        <div className=\"flex inp\" style={{backgroundColor: lightMode ? '#f0f4f6' : '#25273c'}}>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Create a new todo...\"\r\n              value={inputText}\r\n              onChange={handleChange}\r\n              style={{backgroundColor: lightMode ? '#f0f4f6' : '#25273c', color: lightMode ? 'hsl(235, 19%, 35%)': 'hsl(0, 0%, 98%)'}}\r\n            />\r\n          </div>\r\n          <button onClick={addItem}>ADD</button>\r\n        </div>\r\n        <div className=\"ctn\" style={{backgroundColor: lightMode ? '#f0f4f6' : '#25273c'}}>\r\n          {filteredItems.map((todoItem, index) => (\r\n            <div className=\"flex ctn1\" key={index}>\r\n              <div className=\"flex2\">\r\n                {/* Clicking on the circle toggles completion status */}\r\n                <div\r\n                  className={todoItem.completed ? 'selected' : 'circle'}\r\n                  onClick={() => toggleComplete(index)}\r\n                ></div>\r\n                <span\r\n                  style={{\r\n                    textDecoration: todoItem.completed\r\n                      ? 'line-through'\r\n                      : 'none',\r\n                      color: lightMode ? 'hsl(235, 19%, 35%)': 'hsl(0, 0%, 98%)'\r\n                  }}\r\n                >\r\n                  {todoItem.text}\r\n                </span>\r\n              </div>\r\n              {/* Clicking on the delete icon deletes the item */}\r\n              <img src={cross} onClick={() => deleteItem(index)} alt=\"delete\" />\r\n            </div>\r\n          ))}\r\n          <div className=\"flex last\">\r\n            {/* Display the number of active items */}\r\n            <div>\r\n              <p>\r\n                <span>{items.filter((item) => !item.completed).length}</span>{' '}\r\n                items left\r\n              </p>\r\n            </div>\r\n            <div className=\"flex2\">\r\n              {/* Filter buttons */}\r\n              <p onClick={() => handleFilter('All')} style={{color: filter ==='All' ? 'hsl(220, 98%, 61%)' : 'inherit'}} className={filter !== 'All' ? 'hovers' : ''}>All</p>\r\n              <p onClick={() => handleFilter('Active')} style={{color: filter ==='Active' ? 'hsl(220, 98%, 61%)' : 'inherit'}} className={filter !== 'Active' ? 'hovers' : ''}>Active</p>\r\n              <p onClick={() => handleFilter('Completed')} style={{color: filter ==='Completed' ? 'hsl(220, 98%, 61%)' : 'inherit'}} className={filter !== 'Completed' ? 'hovers' : ''}>Completed</p>\r\n            </div>\r\n            <div>\r\n              <p onClick={clearCompleted} className={lightMode ? 'no-hover' : 'hovers'}>Clear Completed</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}